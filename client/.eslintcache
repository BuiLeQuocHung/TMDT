[{"D:\\211\\TMDT\\TMDT\\client\\src\\index.js":"1","D:\\211\\TMDT\\TMDT\\client\\src\\App.js":"2","D:\\211\\TMDT\\TMDT\\client\\src\\GlobleState.js":"3","D:\\211\\TMDT\\TMDT\\client\\src\\components\\footer\\Footer.js":"4","D:\\211\\TMDT\\TMDT\\client\\src\\components\\mainpage\\MainPage.js":"5","D:\\211\\TMDT\\TMDT\\client\\src\\components\\header\\Header.js":"6","D:\\211\\TMDT\\TMDT\\client\\src\\components\\mainpage\\utils\\notFoundPage\\NotFoundPage.js":"7","D:\\211\\TMDT\\TMDT\\client\\src\\components\\mainpage\\detailsProduct\\DetailsProduct.js":"8","D:\\211\\TMDT\\TMDT\\client\\src\\components\\mainpage\\history\\OrderHistory.js":"9","D:\\211\\TMDT\\TMDT\\client\\src\\components\\mainpage\\cart\\Cart.js":"10","D:\\211\\TMDT\\TMDT\\client\\src\\components\\mainpage\\history\\DetailHistory.js":"11","D:\\211\\TMDT\\TMDT\\client\\src\\components\\mainpage\\products\\Products.js":"12","D:\\211\\TMDT\\TMDT\\client\\src\\components\\mainpage\\categories\\Categories.js":"13","D:\\211\\TMDT\\TMDT\\client\\src\\components\\mainpage\\cartHover\\CartHover.js":"14","D:\\211\\TMDT\\TMDT\\client\\src\\components\\mainpage\\createProduct\\CreateProduct.js":"15","D:\\211\\TMDT\\TMDT\\client\\src\\components\\mainpage\\auth\\login\\Login.js":"16","D:\\211\\TMDT\\TMDT\\client\\src\\api\\CategoriesApi.js":"17","D:\\211\\TMDT\\TMDT\\client\\src\\components\\mainpage\\myAccount\\MyAccount.js":"18","D:\\211\\TMDT\\TMDT\\client\\src\\api\\ProductsApi.js":"19","D:\\211\\TMDT\\TMDT\\client\\src\\api\\UsersApi.js":"20","D:\\211\\TMDT\\TMDT\\client\\src\\components\\mainpage\\auth\\register\\Register.js":"21","D:\\211\\TMDT\\TMDT\\client\\src\\components\\mainpage\\cart\\PaypalButton.js":"22","D:\\211\\TMDT\\TMDT\\client\\src\\components\\mainpage\\utils\\productItem\\ProductItem.js":"23","D:\\211\\TMDT\\TMDT\\client\\src\\components\\mainpage\\filter\\Filter.js":"24","D:\\211\\TMDT\\TMDT\\client\\src\\components\\mainpage\\loadMore\\LoadMore.js":"25"},{"size":176,"mtime":1634202937379,"results":"26","hashOfConfig":"27"},{"size":993,"mtime":1634265675387,"results":"28","hashOfConfig":"27"},{"size":1225,"mtime":1634202937346,"results":"29","hashOfConfig":"27"},{"size":4090,"mtime":1634268743941,"results":"30","hashOfConfig":"27"},{"size":2785,"mtime":1634202937350,"results":"31","hashOfConfig":"27"},{"size":10020,"mtime":1634269028740,"results":"32","hashOfConfig":"27"},{"size":518,"mtime":1634202937366,"results":"33","hashOfConfig":"27"},{"size":6244,"mtime":1634266229291,"results":"34","hashOfConfig":"27"},{"size":3627,"mtime":1634266329608,"results":"35","hashOfConfig":"27"},{"size":12559,"mtime":1634265970771,"results":"36","hashOfConfig":"27"},{"size":5010,"mtime":1634266795697,"results":"37","hashOfConfig":"27"},{"size":4742,"mtime":1634266352490,"results":"38","hashOfConfig":"27"},{"size":7311,"mtime":1634264861770,"results":"39","hashOfConfig":"27"},{"size":3812,"mtime":1634266018877,"results":"40","hashOfConfig":"27"},{"size":15655,"mtime":1634266861416,"results":"41","hashOfConfig":"27"},{"size":5981,"mtime":1634268536638,"results":"42","hashOfConfig":"27"},{"size":577,"mtime":1634202937347,"results":"43","hashOfConfig":"27"},{"size":9157,"mtime":1634269215188,"results":"44","hashOfConfig":"27"},{"size":1681,"mtime":1634202937347,"results":"45","hashOfConfig":"27"},{"size":3411,"mtime":1634265718270,"results":"46","hashOfConfig":"27"},{"size":7366,"mtime":1634265943218,"results":"47","hashOfConfig":"27"},{"size":2997,"mtime":1634266003306,"results":"48","hashOfConfig":"27"},{"size":12310,"mtime":1634266406907,"results":"49","hashOfConfig":"27"},{"size":5430,"mtime":1634266248257,"results":"50","hashOfConfig":"27"},{"size":578,"mtime":1634202937363,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"jql0g7",{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"D:\\211\\TMDT\\TMDT\\client\\src\\index.js",[],["108","109"],"D:\\211\\TMDT\\TMDT\\client\\src\\App.js",["110"],"import './app.css';\r\nimport React from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { DataProvider } from './GlobleState';\r\n \r\nimport Header from './components/header/Header';\r\nimport MainPage from './components/mainpage/MainPage';\r\nimport Footer from './components/footer/Footer';\r\nimport { ToastContainer } from 'react-toastify';\r\n \r\nconst App = () => {\r\n   return (\r\n       <DataProvider>\r\n           <Router>\r\n               <Header />\r\n               <div style={{ marginTop: '120px' }}>\r\n                   <MainPage />\r\n               </div>\r\n               <Footer />\r\n           </Router>\r\n           {/* <ToastContainer\r\n           position=\"top-right\"\r\n           autoClose={5000}\r\n           hideProgressBar={false}\r\n           newestOnTop={false}\r\n           closeOnClick\r\n           rtl={false}\r\n           pauseOnFocusLoss\r\n           draggable\r\n           pauseOnHover\r\n       /> */}\r\n       </DataProvider>\r\n \r\n   );\r\n}\r\n \r\nexport default App;","D:\\211\\TMDT\\TMDT\\client\\src\\GlobleState.js",[],"D:\\211\\TMDT\\TMDT\\client\\src\\components\\footer\\Footer.js",[],"D:\\211\\TMDT\\TMDT\\client\\src\\components\\mainpage\\MainPage.js",[],"D:\\211\\TMDT\\TMDT\\client\\src\\components\\header\\Header.js",["111","112"],"D:\\211\\TMDT\\TMDT\\client\\src\\components\\mainpage\\utils\\notFoundPage\\NotFoundPage.js",[],"D:\\211\\TMDT\\TMDT\\client\\src\\components\\mainpage\\detailsProduct\\DetailsProduct.js",[],"D:\\211\\TMDT\\TMDT\\client\\src\\components\\mainpage\\history\\OrderHistory.js",[],"D:\\211\\TMDT\\TMDT\\client\\src\\components\\mainpage\\cart\\Cart.js",[],"D:\\211\\TMDT\\TMDT\\client\\src\\components\\mainpage\\history\\DetailHistory.js",[],"D:\\211\\TMDT\\TMDT\\client\\src\\components\\mainpage\\products\\Products.js",[],"D:\\211\\TMDT\\TMDT\\client\\src\\components\\mainpage\\categories\\Categories.js",[],"D:\\211\\TMDT\\TMDT\\client\\src\\components\\mainpage\\cartHover\\CartHover.js",[],"D:\\211\\TMDT\\TMDT\\client\\src\\components\\mainpage\\createProduct\\CreateProduct.js",["113","114","115"],"import Tooltip from '@material-ui/core/Tooltip';\r\nimport axios from 'axios';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { GlobleState } from '../../../GlobleState';\r\nimport loadingimage from './loading.gif';\r\nfunction CreateProduct() {\r\n   const params = useParams();\r\n   var initialState = {\r\n       name: '',\r\n       age: '',\r\n       category: '',\r\n       description: '',\r\n       difficultLevel: '',\r\n       numPlayerFrom: '',\r\n       numPlayerTo: '',\r\n       playingTime: '',\r\n       price: '',\r\n       image: ''\r\n   };\r\n   const history = useHistory();\r\n   const state = useContext(GlobleState);\r\n   const [categories] = state.categoriesApi.categories;\r\n   const [products] = state.productsApi.products;\r\n   const [callback, setCallback] = state.productsApi.callback;\r\n   const [isAdmin] = state.usersApi.isAdmin;\r\n   const [token] = state.token;\r\n   const [product, setProduct] = useState(initialState);\r\n   const [image, setImage] = useState(false);\r\n   const [loading, setLoading] = useState(false);\r\n   const [startdate, setStartDate] = useState(new Date());\r\n   const [onEdit, setOnEdit] = useState(false);\r\n   useEffect(() => {\r\n       window.scrollTo(0, 0);\r\n   }, []);\r\n   useEffect(() => {\r\n       if (params.id) {\r\n           products && Object.values(products).forEach((product) => {\r\n               if (product.id == params.id) {\r\n                   setProduct(product);\r\n                   setImage(product.image);\r\n                   setStartDate(new Date(product.birthday));\r\n                   setOnEdit(true);\r\n               }\r\n           });\r\n       } else {\r\n           setProduct(initialState);\r\n           setImage(false);\r\n           setOnEdit(false);\r\n       }\r\n   }, [params.id, products]);\r\n   const handleSubmit = async (e) => {\r\n       e.preventDefault();\r\n       try {\r\n           if (onEdit) {\r\n               if (!isAdmin) return alert(\"You're not an admin.\");\r\n               // if (!image) return alert('Image not found.');\r\n               await axios.put(\r\n                   `/api/products/${product.id}`,\r\n                   product,\r\n                   {\r\n                       headers: { Authorization: token },\r\n                   },\r\n               );\r\n               setCallback(!callback);\r\n               history.push('/');\r\n           } else {\r\n               if (!isAdmin) return alert(\"You're not an admin.\");\r\n               // if (!image) return alert('Image not found.');\r\n               await axios.post(\r\n                   '/api/products',\r\n                   product,\r\n                   {\r\n                       headers: { Authorization: token },\r\n                   },\r\n               );\r\n               setCallback(!callback);\r\n               history.push('/');\r\n           }\r\n       } catch (err) {\r\n           alert(err.response.data.msg);\r\n       }\r\n   };\r\n   const onHandleChange = (e) => {\r\n       let targets = e.target;\r\n       let name = targets.name;\r\n       let value = targets.value.toLowerCase();\r\n       console.log('=======name====', name)\r\n       console.log('=======product', product)\r\n       setProduct({\r\n           ...product,\r\n           [name]: value,\r\n       });\r\n   };\r\n   const onHandleUpload = async (e) => {\r\n       e.preventDefault();\r\n       try {\r\n           if (!isAdmin) return alert(\"You're not an admin.\");\r\n           const file = e.target.files[0];\r\n           if (!file) return alert('Image not found.');\r\n           if (file.size > 1024 * 1024) {\r\n               // 1mb\r\n               return alert('Size too large.');\r\n           }\r\n           if (file.type !== 'image/jpeg' && file.type !== 'image/png') {\r\n               // 1mb\r\n               return alert('File format is incorrect.');\r\n           }\r\n           let formDate = new FormData();\r\n           formDate.append('file', file);\r\n           setLoading(true);\r\n           const res = await axios.post('/api/upload', formDate, {\r\n               headers: {\r\n                   'content-type': 'multipart/from-data',\r\n                   Authorization: token,\r\n               },\r\n           });\r\n           setLoading(false);\r\n           setImage(res.data);\r\n       } catch (err) {\r\n           alert(err.response.data.msg);\r\n       }\r\n   };\r\n   const handleDestroyImage = async () => {\r\n       try {\r\n           if (!isAdmin) return alert(\"You're not an admin.\");\r\n           setLoading(true);\r\n           await axios.post(\r\n               '/api/destroy',\r\n               { public_id: image.public_id },\r\n               {\r\n                   headers: { Authorization: token },\r\n               },\r\n           );\r\n           setLoading(false);\r\n           setImage(false);\r\n       } catch (err) {\r\n           alert(err.response.data.msg);\r\n       }\r\n   };\r\n   let styleImaheUpload = {\r\n       display: image ? 'block' : 'none',\r\n   };\r\n   return (\r\n       <div className=\"create-product container\" id = \"create-product-container\">\r\n           <div className=\"cp-image-upload-box\">\r\n               {loading ? (\r\n                   <div className=\"cp-loading-image\">\r\n                       {' '}\r\n                       <img src={loadingimage} alt=\"loading-img\"></img>\r\n                   </div>\r\n               ) : (\r\n                   <>\r\n                       <input\r\n                           type=\"file\"\r\n                           className=\"cp-file-upload\"\r\n                           name=\"file\"\r\n                           id=\"file_up\"\r\n                           onChange={onHandleUpload}\r\n                       ></input>\r\n                       <img\r\n                           className=\"cp-image-upload\"\r\n                           style={styleImaheUpload}\r\n                           alt=\"img-upload\"\r\n                           src={image ? image.url : ''}\r\n                       ></img>\r\n                       {image ? (\r\n                           <Tooltip title=\"Delete Image\" placement=\"top\">\r\n                               <span\r\n                                   className=\"cp-image-button\"\r\n                                   onClick={handleDestroyImage}\r\n                               >\r\n                                   X\r\n                               </span>\r\n                           </Tooltip>\r\n                       ) : (\r\n                           ''\r\n                       )}\r\n                   </>\r\n               )}\r\n           </div>\r\n         \r\n           <div className =\"div-form\">\r\n               <form onSubmit={handleSubmit} className = \"form-create-edit\">\r\n                 \r\n                   {/* <div className=\"mb-3\">\r\n                       <label htmlFor=\"product_id\" className=\"form-label\">\r\n                           Product ID\r\n                       </label>\r\n                       <input\r\n                           type=\"text\"\r\n                           className=\"form-control\"\r\n                           onChange={onHandleChange}\r\n                           disabled={onEdit ? true : false}\r\n                           value={product.product_id}\r\n                           id=\"product_id\"\r\n                           name=\"product_id\"\r\n                           required\r\n                       />\r\n                   </div> */}\r\n                   <div className=\"ten-cate\">\r\n                       <div className=\"mb-3\" id =\"ten\">\r\n                           <label htmlFor=\"name\" className=\"form-label\">\r\n                               Tên\r\n                           </label>\r\n                           <input\r\n                               type=\"text\"\r\n                               className=\"form-control\"\r\n                               onChange={onHandleChange}\r\n                               value={product.name}\r\n                               id=\"name\"\r\n                               name=\"name\"\r\n                               required\r\n                           />\r\n                       </div>\r\n                       <div className=\"mb-3\">\r\n                           <label\r\n                               htmlFor=\"category\"\r\n                               className=\"form-label\"\r\n                               style={{ marginRight: '20px' }}\r\n                           >\r\n                               Phân loại\r\n                           </label>\r\n                           <select\r\n                               name=\"category\"\r\n                               id=\"category\"\r\n                               value={product.category}\r\n                               onChange={onHandleChange}\r\n                               // required\r\n                           >\r\n                               <option value=\"\">Please select a category</option>\r\n                               {categories && Object.values(categories).map((category) => {\r\n                                   return (\r\n                                       <option\r\n                                           value={category.id}\r\n                                           key={category.id}\r\n                                       >\r\n                                           {category.name}\r\n                                       </option>\r\n                                   );\r\n                               })}\r\n                           </select>\r\n                       </div>\r\n                   </div>\r\n                 \r\n                   <div>\r\n                       <div className=\"mb-3\">\r\n                           <label htmlFor=\"price\" className=\"form-label\">\r\n                               Giá tiền\r\n                           </label>\r\n                           <input\r\n                               type=\"number\"\r\n                               className=\"form-control\"\r\n                               onChange={onHandleChange}\r\n                               value={product.price}\r\n                               id=\"price\"\r\n                               name=\"price\"\r\n                               required\r\n                           />\r\n                       </div>\r\n                       <div>đồng</div>\r\n                   </div>\r\n                 \r\n                   <div className=\"motcaidivtodung\">\r\n                       <div className=\"mb-3 mr-3\">\r\n                           <label htmlFor=\"bust\" className=\"form-label\">\r\n                               Số người chơi tối thiểu\r\n                           </label>\r\n                           <input\r\n                               type=\"number\"\r\n                               className=\"form-control\"\r\n                               onChange={onHandleChange}\r\n                               value={product.numPlayerFrom}\r\n                               id=\"bust\"\r\n                               name=\"numPlayerFrom\"\r\n                               required\r\n                           />\r\n                       </div>\r\n                       <div className=\"mb-3 mr-3\">\r\n                           <label htmlFor=\"waist\" className=\"form-label\">\r\n                               tối đa\r\n                           </label>\r\n                           <input\r\n                               type=\"number\"\r\n                               className=\"form-control\"\r\n                               onChange={onHandleChange}\r\n                               value={product.numPlayerTo}\r\n                               id=\"waist\"\r\n                               name=\"numPlayerTo\"\r\n                               required\r\n                           />\r\n                       </div>\r\n                       <div className=\"mb-3\">\r\n                           <label htmlFor=\"japanName\" className=\"form-label\">\r\n                               Thời gian chơi\r\n                           </label>\r\n                           <input\r\n                               type=\"text\"\r\n                               className=\"form-control\"\r\n                               onChange={onHandleChange}\r\n                               value={product.playingTime}\r\n                               id=\"japanName\"\r\n                               name=\"playingTime\"\r\n                               required\r\n                           />\r\n                       </div>\r\n                       <div>phút</div>\r\n                   </div>\r\n                   <div className=\"motcaidivvuavua\">\r\n                       <div className=\"mb-3 mr-3\">\r\n                           <label htmlFor=\"hip\" className=\"form-label\">\r\n                               Độ tuổi từ\r\n                           </label>\r\n                           <input\r\n                               type=\"number\"\r\n                               className=\"form-control\"\r\n                               onChange={onHandleChange}\r\n                               value={product.age}\r\n                               id=\"hip\"\r\n                               name=\"age\"\r\n                               required\r\n                           />\r\n                       </div>\r\n                       <div className=\"mb-3 mr-3\">\r\n                           <label htmlFor=\"height\" className=\"form-label\">\r\n                               Độ khó\r\n                           </label>\r\n                           <input\r\n                               type=\"number\"\r\n                               className=\"form-control\"\r\n                               onChange={onHandleChange}\r\n                               value={product.difficultLevel}\r\n                               id=\"height\"\r\n                               name=\"difficultLevel\"\r\n                               required\r\n                           />\r\n                       </div>\r\n                   </div>\r\n                 \r\n                 \r\n                   {/* <div className=\"birth\">\r\n                       <span className=\"d-block\">Birthday</span>\r\n                       <DatePicker\r\n                           selected={startdate}\r\n                           onChange={(date) => setStartDate(date)}\r\n                           dateFormat=\"dd/MM/yyyy\"\r\n                       />\r\n                   </div> */}\r\n                 \r\n                   {/* <div className=\"mb-3 mt-3\">\r\n                       <label htmlFor=\"blood_type\" className=\"form-label\">\r\n                           Blood Type\r\n                       </label>\r\n                       <input\r\n                           type=\"text\"\r\n                           className=\"form-control\"\r\n                           onChange={onHandleChange}\r\n                           value={product.blood_type}\r\n                           id=\"blood_type\"\r\n                           name=\"blood_type\"\r\n                           required\r\n                       />\r\n                   </div> */}\r\n                   <div className=\"mb-3 mt-3\">\r\n                       <label htmlFor=\"hobby\" className=\"form-label\">\r\n                           Mô tả\r\n                       </label>\r\n                       <input\r\n                           type=\"text\"\r\n                           className=\"form-control\"\r\n                           onChange={onHandleChange}\r\n                           value={product.description}\r\n                           id=\"hobby\"\r\n                           name=\"description\"\r\n                           required\r\n                       />\r\n                   </div>\r\n                 \r\n                 \r\n                   <button type=\"submit\" className=\"cp-button\">\r\n                       {onEdit ? 'Cập nhật' : 'Tạo'}\r\n                   </button>\r\n               </form>\r\n           </div>\r\n         \r\n       </div>\r\n   );\r\n}\r\nexport default CreateProduct;","D:\\211\\TMDT\\TMDT\\client\\src\\components\\mainpage\\auth\\login\\Login.js",[],"D:\\211\\TMDT\\TMDT\\client\\src\\api\\CategoriesApi.js",[],"D:\\211\\TMDT\\TMDT\\client\\src\\components\\mainpage\\myAccount\\MyAccount.js",["116"],"D:\\211\\TMDT\\TMDT\\client\\src\\api\\ProductsApi.js",["117","118"],"import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction ProductsApi() {\r\n    const [products, setProducts] = useState({});\r\n    const [callback, setCallback] = useState(false);\r\n    const [loadingAPI, setLoadingAPI] = useState(false);\r\n    const [category, setCategory] = useState('');\r\n    const [page, setPage] = useState(1);\r\n    const [sort, setSort] = useState('');\r\n    const [query, setQuery] = useState('');\r\n    const [result, setResult] = useState(0);\r\n    useEffect(() => {\r\n        const getProducts = async () => {\r\n            setLoadingAPI(true);\r\n            const res = await axios.get(\r\n                `/api/products?limit=${page * 9}&${sort}&${category}&name[regex]=${query}`,\r\n            );\r\n            setLoadingAPI(false);\r\n            setProducts(res.data.products);\r\n            setResult(res.data.results);\r\n        };\r\n        getProducts();\r\n    }, [callback, category, sort, query]);\r\n\r\n    useEffect(() => {\r\n        const getProducts = async () => {\r\n            const res = await axios.get(\r\n                `/api/products?limit=${page * 9}&${sort}&${category}&name[regex]=${query}`,\r\n            );\r\n            setProducts(res.data.products);\r\n            setResult(res.data.results);\r\n        };\r\n        getProducts();\r\n    }, [page]);\r\n\r\n    return {\r\n        products: [products, setProducts],\r\n        callback: [callback, setCallback],\r\n        category: [category, setCategory],\r\n        page: [page, setPage],\r\n        sort: [sort, setSort],\r\n        query: [query, setQuery],\r\n        result: [result, setResult],\r\n        loadingAPI: [loadingAPI, setLoadingAPI],\r\n    };\r\n}\r\n\r\nexport default ProductsApi;\r\n","D:\\211\\TMDT\\TMDT\\client\\src\\api\\UsersApi.js",["119"],"import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify'\r\n \r\nfunction UsersApi(token) {\r\n  const [isLogged, setIslogged] = useState(false);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [cart, setCart] = useState([]);\r\n  const [history, setHistory] = useState([]);\r\n  const [callback, setCallback] = useState(false);\r\n  const [user, setUser] = useState(false);\r\n  // thang nay dung de render cai history khi mua hang hanh cong -> goi lai API\r\n \r\n  //  Add Cart\r\n  const addCart = async (product) => {\r\n      if (isLogged === false) {\r\n          alert('Please login to continue buying');\r\n      } else {\r\n          const check = cart.every((item) => {\r\n              return item.id !== product.id;\r\n          });\r\n          if (check) {\r\n              setCart([...cart, { ...product, quantity: 1 }]);\r\n              axios.patch(\r\n                  '/user/addCart',\r\n                  { cart: [...cart, { ...product, quantity: 1 }] },\r\n                  {\r\n                      headers: { Authorization: token },\r\n                  },\r\n              );\r\n          } else {\r\n              toast.success('🦄 Wow so easy!', {\r\n                  position: \"top-right\",\r\n                  autoClose: 2000,\r\n                  hideProgressBar: false,\r\n                  closeOnClick: true,\r\n                  pauseOnHover: true,\r\n                  draggable: true,\r\n                  progress: undefined,\r\n                  });\r\n            \r\n              alert('This product has been added to cart.');\r\n          }\r\n      }\r\n  };\r\n \r\n  // Get User\r\n  useEffect(() => {\r\n      if (token) {\r\n          const getUser = async () => {\r\n              try {\r\n                  const res = await axios.get('/user/infor', {\r\n                      headers: { Authorization: token },\r\n                  });\r\n                  console.log(\"========res=get user=====\", res)\r\n                  setIslogged(true);\r\n                  if (res.data.role === 1) {\r\n                      setIsAdmin(true);\r\n                  }\r\n                  setCart(Object.values(res.data.cart));\r\n                  console.log(\"=======truc khi \", user)\r\n                  setUser(res.data);\r\n                  console.log(\"=======sau khi \", user)\r\n              } catch (err) {\r\n                  console.log(err.response);\r\n              }\r\n          };\r\n          getUser();\r\n      }\r\n  }, [token, isAdmin, isLogged]);\r\n \r\n  // Payment\r\n  useEffect(() => {\r\n      if (token) {\r\n          const getHistory = async () => {\r\n              if (isAdmin) {\r\n                  let res = await axios.get('/api/payment', {\r\n                      headers: { Authorization: token },\r\n                  });\r\n                  setHistory(Object.values(res.data));\r\n              } else {\r\n                  let res = await axios.get('/user/history', {\r\n                      headers: { Authorization: token },\r\n                  });\r\n                  setHistory(Object.values(res.data));\r\n              }\r\n          };\r\n          getHistory();\r\n      }\r\n  }, [token, callback, isAdmin]);\r\n \r\n  return {\r\n      isLogged: [isLogged, setIslogged],\r\n      isAdmin: [isAdmin, setIsAdmin],\r\n      cart: [cart, setCart],\r\n      history: [history, setHistory],\r\n      callback: [callback, setCallback],\r\n      addCart: addCart,\r\n      user: [user, setUser],\r\n  };\r\n}\r\n \r\nexport default UsersApi;","D:\\211\\TMDT\\TMDT\\client\\src\\components\\mainpage\\auth\\register\\Register.js",[],"D:\\211\\TMDT\\TMDT\\client\\src\\components\\mainpage\\cart\\PaypalButton.js",[],"D:\\211\\TMDT\\TMDT\\client\\src\\components\\mainpage\\utils\\productItem\\ProductItem.js",["120"],"import React, { useState, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\nimport { GlobleState } from '../../../../GlobleState';\r\nexport default function ProductItem({\r\n  product,\r\n  isAdmin,\r\n  deleteProduct,\r\n  handleCheckProduct,\r\n}) {\r\n  const state = useContext(GlobleState);\r\n  const addCart = state.usersApi.addCart;\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const day = dayjs(product.birthday).format('DD-MM-YYYY');\r\n  const openModel = () => {\r\n      setOpenModal(true);\r\n  };\r\n  const closeModal = () => {\r\n      setOpenModal(false);\r\n  };\r\n  const onHandleChange = () => {\r\n      handleCheckProduct(product._id);\r\n  };\r\n  return (\r\n      <React.Fragment>\r\n          <div className=\"col-sm-12 col-md-6 col-lg-4\">\r\n              <div className=\"prouduct_cart\">\r\n                  {/* {product.price > 1200 ? (\r\n                      <>\r\n                          <div className=\"prouduct_cart-new\">New</div>\r\n                      </>\r\n                  ) : (\r\n                      ''\r\n                  )} */}\r\n                  {isAdmin ? (\r\n                      <input\r\n                          type=\"checkbox\"\r\n                          checked={product.checked}\r\n                          className=\"prouduct_cart-checkbox\"\r\n                          onChange={onHandleChange}\r\n                      ></input>\r\n                  ) : (\r\n                      ''\r\n                  )}\r\n                  <Link to={`/detail/${product.id}`}>\r\n                      <img\r\n                       //    src={product.image}\r\n                          src=\"https://cf.shopee.vn/file/56cf50a0c4d9180078ff62fa4f9a47b7\"\r\n                          alt=\"product-item\"\r\n                          className=\"product-img\"\r\n                      ></img>\r\n                  </Link>\r\n                  <div className=\"content\">\r\n                      <Link to={`/detail/${product.id}`}>\r\n                          <div className=\"product-name\">{product.name}</div>\r\n                      </Link>\r\n                      {isAdmin ? (\r\n                          ''\r\n                      ) : (\r\n                          <>\r\n                              <div className=\"price\">\r\n                                  ${product.price}\r\n                              </div>\r\n                              <div\r\n                                  className=\"btn-addtocart\"\r\n                                  onClick={() => addCart(product)}\r\n                              >\r\n                                  Add To Cart\r\n                              </div>\r\n                          </>\r\n                      )}\r\n                  </div>\r\n                  <button className=\"quick-look\" onClick={openModel}>\r\n                      <div>Quick look</div>\r\n                  </button>\r\n                  <button\r\n                      className=\"rp-btn-addtocart\"\r\n                      onClick={() => addCart(product)}\r\n                  >\r\n                      <div>Add to cart</div>\r\n                  </button>\r\n              </div>\r\n              {isAdmin ? (\r\n                  <div className=\"product_admin-btn\">\r\n                      <div\r\n                          className=\"product_admin-delete\"\r\n                          onClick={() =>\r\n                              deleteProduct(\r\n                                  product.id,\r\n                                  product.image,\r\n                              )\r\n                          }\r\n                      >\r\n                          Delete\r\n                      </div>\r\n                      <div className=\"product_admin-edit\">\r\n                          {' '}\r\n                          <Link\r\n                              to={`/product/edit/${product._id}`}\r\n                              style={{ color: 'white' }}\r\n                          >\r\n                              Edit\r\n                          </Link>\r\n                      </div>\r\n                  </div>\r\n              ) : (\r\n                  <></>\r\n              )}\r\n              <div className={openModal ? 'modal modal-show' : 'modal'}>\r\n                  <div className=\"modal-content\">\r\n                      <div className=\"btn-close-modal\" onClick={closeModal}>\r\n                          &times;\r\n                      </div>\r\n                  <div className=\"card__body\">\r\n                      <div className=\"card__body-left\">\r\n                          {product.image ? (\r\n                              <img\r\n                                //   src=\"https://cf.shopee.vn/file/56cf50a0c4d9180078ff62fa4f9a47b7\"\r\n                                  src={product.image}\r\n                                  alt=\"product-detail\"\r\n                              ></img>\r\n                          ) : (\r\n                            <img\r\n                            //   src=\"https://cf.shopee.vn/file/56cf50a0c4d9180078ff62fa4f9a47b7\"\r\n                              src=\"https://bgvnpicture.s3-ap-southeast-1.amazonaws.com/old/stories/images/uno-mattel-4.jpg\"\r\n                              alt=\"product-detail\"\r\n                          ></img>\r\n                          )}\r\n                      </div>\r\n                      <div className=\"card__body-right card__body-right--a\">\r\n                          <div className=\"modal-wrapper\" >\r\n                              <Link to={`/detail/${product._id}`} className=\"modal-name\">\r\n                                  Bài Uno\r\n                                  </Link>\r\n                              {/* <h5 ></h5> */}\r\n                              <p className=\"modal-price\">\r\n                                  139.000đ\r\n                              </p>\r\n                          </div>\r\n                          <div className=\"modal-list\">\r\n                              <div className=\"modal-item\">\r\n                                  <div className=\"modal-image\">\r\n                                      <i className=\"fa fa-user\"></i>\r\n                                  </div>\r\n                                  <div className=\"modal-desc\">\r\n                                      <p>Số người chơi</p>\r\n                                      <p style ={{fontWeight: 'bold'}}>2 đến 10 người</p>\r\n                                  </div>\r\n                              </div>\r\n                              <div className=\"modal-item\">\r\n                                  <div className=\"modal-image\">\r\n                                      <i className=\"fa fa-clock\"></i>\r\n                                  </div>\r\n                                  <div className=\"modal-desc\">\r\n                                      <p>Thời gian chơi</p>\r\n                                      <p style={{fontWeight: 'bold'}}>Dưới 30 phút</p>\r\n                                  </div>\r\n                              </div>\r\n                              <div className=\"modal-item\">\r\n                                  <div className=\"modal-image\">\r\n                                      <i className=\"fa fa-star\"></i>\r\n                                  </div>\r\n                                  <div className=\"modal-desc\">\r\n                                      <p>Độ tuổi</p>\r\n                                      <p style={{fontWeight: 'bold'}}>Từ 8 tuổi</p>\r\n                                  </div>\r\n                              </div>\r\n                              <div className=\"modal-item\">\r\n                                  <div className=\"modal-image\">\r\n                                      <i className=\"fa fa-star\"></i>\r\n                                  </div>\r\n                                  <div className=\"modal-desc\">\r\n                                      <p>Độ khó</p>\r\n                                      <p style={{fontWeight: 'bold'}}>1</p>\r\n                                  </div>\r\n                              </div>\r\n                          </div>\r\n                          <p className=\"modal-text\">Bài Uno - Trò chơi bài phổ biến rầm rộ ở Việt Nam hiện nay. Người chơi đánh hết bài đầu tiên chiến thắng. Và đừng quên hô \"Uno\" khi bạn chỉ còn 1 lá bài đó!</p>\r\n                          {isAdmin ? (\r\n                              <div\r\n                                  className=\"product_admin-btn\"\r\n                                  style={{ marginTop: '20px'}}\r\n                              >\r\n                                  <div\r\n                                      style = {{\r\n                                          borderRadius: '8px',\r\n                                          marginLeft: '24px',\r\n                                          marginRight: '20px'\r\n                                      }}\r\n                                      onClick={() =>\r\n                                          deleteProduct(\r\n                                              product._id,\r\n                                              product.images.public_id,\r\n                                          )\r\n                                      }\r\n                                  >\r\n                                      Delete\r\n                                  </div>\r\n                                  <div style={{  borderRadius: '8px', marginLeft: '12px', }}>\r\n                                      <a\r\n                                          href={`/product/edit/${product._id}`}\r\n                                          style={{color: 'white'}}\r\n                                      >\r\n                                          Edit\r\n                                      </a>\r\n                                  </div>\r\n                              </div>\r\n                          ) : (\r\n                              <div className=\"product_user-btn\"\r\n                              style={{marginTop: \"20px\"}}>\r\n                                   <div\r\n                                       className=\"card_btn-addtocart\"\r\n                                       onClick={() => addCart(product)}\r\n                                       //    style = {{\r\n                                       //        margin: \"0 auto\"\r\n                                       //    }}\r\n                                   >\r\n                                       Add To Cart\r\n                                   </div>\r\n                              </div>\r\n                             \r\n                          )}\r\n                      </div>\r\n                  </div>\r\n                  {/* <div>\r\n                      {isAdmin ? (\r\n                              <div\r\n                                  className=\"product_admin-btn\"\r\n                                  style={{ marginTop: '20px'}}\r\n                              >\r\n                                  <div\r\n                                      style = {{\r\n                                          borderRadius: '8px',\r\n                                          marginLeft: '24px',\r\n                                          marginRight: '20px'\r\n                                      }}\r\n                                      onClick={() =>\r\n                                          deleteProduct(\r\n                                              product._id,\r\n                                              product.images.public_id,\r\n                                          )\r\n                                      }\r\n                                  >\r\n                                      Delete\r\n                                  </div>\r\n                                  <div style={{  borderRadius: '8px', marginLeft: '12px', }}>\r\n                                      <a\r\n                                          href={`/product/edit/${product._id}`}\r\n                                          style={{color: 'white'}}\r\n                                      >\r\n                                          Edit\r\n                                      </a>\r\n                                  </div>\r\n                              </div>\r\n                          ) : (\r\n                              <div\r\n                                  className=\"card_btn-addtocart\"\r\n                                  onClick={() => addCart(product)}\r\n                              >\r\n                                  Add To Cart\r\n                              </div>\r\n                          )}     \r\n                  </div> */}\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </React.Fragment>\r\n  );\r\n}\r\n \r\n \r\n\r\n","D:\\211\\TMDT\\TMDT\\client\\src\\components\\mainpage\\filter\\Filter.js",[],"D:\\211\\TMDT\\TMDT\\client\\src\\components\\mainpage\\loadMore\\LoadMore.js",[],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":9,"column":10,"nodeType":"127","messageId":"128","endLine":9,"endColumn":24},{"ruleId":"129","severity":1,"message":"130","line":165,"column":27,"nodeType":"131","endLine":165,"endColumn":67},{"ruleId":"129","severity":1,"message":"130","line":209,"column":27,"nodeType":"131","endLine":209,"endColumn":67},{"ruleId":"125","severity":1,"message":"132","line":32,"column":11,"nodeType":"127","messageId":"128","endLine":32,"endColumn":20},{"ruleId":"133","severity":1,"message":"134","line":40,"column":31,"nodeType":"135","messageId":"136","endLine":40,"endColumn":33},{"ruleId":"137","severity":1,"message":"138","line":52,"column":7,"nodeType":"139","endLine":52,"endColumn":28,"suggestions":"140"},{"ruleId":null,"fatal":true,"severity":2,"message":"141","line":19,"column":5},{"ruleId":"137","severity":1,"message":"142","line":24,"column":8,"nodeType":"139","endLine":24,"endColumn":41,"suggestions":"143"},{"ruleId":"137","severity":1,"message":"144","line":35,"column":8,"nodeType":"139","endLine":35,"endColumn":14,"suggestions":"145"},{"ruleId":"137","severity":1,"message":"146","line":70,"column":6,"nodeType":"139","endLine":70,"endColumn":32,"suggestions":"147"},{"ruleId":"125","severity":1,"message":"148","line":14,"column":9,"nodeType":"127","messageId":"128","endLine":14,"endColumn":12},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"no-unused-vars","'ToastContainer' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'startdate' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initialState'. Either include it or remove the dependency array.","ArrayExpression",["151"],"Parsing error: Unexpected keyword 'const'\n\n  17 |     const [callback, setCallback] = state.usersApi.callback;\n  18 |     const\n> 19 |     const  updateInfo = async (user) => {\n     |     ^\n  20 |         if (window.confirm('You want update information')) {\n  21 |             try {\n  22 |","React Hook useEffect has a missing dependency: 'page'. Either include it or remove the dependency array.",["152"],"React Hook useEffect has missing dependencies: 'category', 'query', and 'sort'. Either include them or remove the dependency array.",["153"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["154"],"'day' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},"Update the dependencies array to be: [initialState, params.id, products]",{"range":"163","text":"164"},"Update the dependencies array to be: [callback, category, sort, query, page]",{"range":"165","text":"166"},"Update the dependencies array to be: [category, page, query, sort]",{"range":"167","text":"168"},"Update the dependencies array to be: [token, isAdmin, isLogged, user]",{"range":"169","text":"170"},[1840,1861],"[initialState, params.id, products]",[908,941],"[callback, category, sort, query, page]",[1294,1300],"[category, page, query, sort]",[2424,2450],"[token, isAdmin, isLogged, user]"]