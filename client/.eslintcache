[{"D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\index.js":"1","D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\App.js":"2","D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\GlobleState.js":"3","D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\components\\mainpage\\MainPage.js":"4","D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\components\\header\\Header.js":"5","D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\components\\footer\\Footer.js":"6","D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\components\\mainpage\\cart\\Cart.js":"7","D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\components\\mainpage\\auth\\login\\Login.js":"8","D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\components\\mainpage\\detailsProduct\\DetailsProduct.js":"9","D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\components\\mainpage\\utils\\notFoundPage\\NotFoundPage.js":"10","D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\components\\mainpage\\categories\\Categories.js":"11","D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\components\\mainpage\\history\\OrderHistory.js":"12","D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\components\\mainpage\\history\\DetailHistory.js":"13","D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\components\\mainpage\\createProduct\\CreateProduct.js":"14","D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\components\\mainpage\\myAccount\\MyAccount.js":"15","D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\api\\ProductsApi.js":"16","D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\components\\mainpage\\products\\Products.js":"17","D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\api\\CategoriesApi.js":"18","D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\api\\UsersApi.js":"19","D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\components\\mainpage\\auth\\register\\Register.js":"20","D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\components\\mainpage\\cartHover\\CartHover.js":"21","D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\components\\mainpage\\cart\\PaypalButton.js":"22","D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\components\\mainpage\\utils\\productItem\\ProductItem.js":"23","D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\components\\mainpage\\filter\\Filter.js":"24","D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\components\\mainpage\\loadMore\\LoadMore.js":"25"},{"size":170,"mtime":1630804951000,"results":"26","hashOfConfig":"27"},{"size":621,"mtime":1630804951000,"results":"28","hashOfConfig":"27"},{"size":1188,"mtime":1630804951000,"results":"29","hashOfConfig":"27"},{"size":2785,"mtime":1633791133201,"results":"30","hashOfConfig":"27"},{"size":10085,"mtime":1634130605593,"results":"31","hashOfConfig":"27"},{"size":4098,"mtime":1634132610864,"results":"32","hashOfConfig":"27"},{"size":12892,"mtime":1633791133207,"results":"33","hashOfConfig":"27"},{"size":6020,"mtime":1633791133201,"results":"34","hashOfConfig":"27"},{"size":6812,"mtime":1634132490152,"results":"35","hashOfConfig":"27"},{"size":500,"mtime":1630804951000,"results":"36","hashOfConfig":"27"},{"size":6696,"mtime":1633791133230,"results":"37","hashOfConfig":"27"},{"size":3194,"mtime":1630804951000,"results":"38","hashOfConfig":"27"},{"size":4858,"mtime":1630804951000,"results":"39","hashOfConfig":"27"},{"size":16092,"mtime":1633791133231,"results":"40","hashOfConfig":"27"},{"size":11726,"mtime":1633791133250,"results":"41","hashOfConfig":"27"},{"size":1632,"mtime":1634130264322,"results":"42","hashOfConfig":"27"},{"size":4859,"mtime":1634130342590,"results":"43","hashOfConfig":"27"},{"size":555,"mtime":1634131518481,"results":"44","hashOfConfig":"27"},{"size":3282,"mtime":1633791133172,"results":"45","hashOfConfig":"27"},{"size":7340,"mtime":1633791133204,"results":"46","hashOfConfig":"27"},{"size":3443,"mtime":1633791133209,"results":"47","hashOfConfig":"27"},{"size":3038,"mtime":1633791133208,"results":"48","hashOfConfig":"27"},{"size":12590,"mtime":1634132861198,"results":"49","hashOfConfig":"27"},{"size":5431,"mtime":1634131592323,"results":"50","hashOfConfig":"27"},{"size":558,"mtime":1630804951000,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1se1d0w",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\index.js",[],["107","108"],"D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\App.js",[],"D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\GlobleState.js",[],"D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\components\\mainpage\\MainPage.js",[],"D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\components\\header\\Header.js",["109","110"],"D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\components\\footer\\Footer.js",[],"D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\components\\mainpage\\cart\\Cart.js",["111"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { GlobleState } from '../../../GlobleState';\r\nimport PaypalButton from './PaypalButton';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default function Cart() {\r\n   const state = useContext(GlobleState);\r\n   const [cart, setCart] = state.usersApi.cart;\r\n   const [callback, setCallback] = state.usersApi.callback;\r\n\r\n   const [total, setTotal] = useState(0);\r\n   const [token] = state.token;\r\n\r\n   useEffect(() => {\r\n       window.scrollTo(0, 0);\r\n   }, []);\r\n\r\n   useEffect(() => {\r\n       const totalCart = () => {\r\n           let total = 0;\r\n           total = cart.reduce((total, sum) => {\r\n               return total + sum.quantity * sum.price;\r\n           }, 0);\r\n           setTotal(total);\r\n       };\r\n       totalCart();\r\n   }, [cart]);\r\n\r\n   const addToCart = async (cart) => {\r\n       await axios.patch(\r\n           '/user/addCart',\r\n           { cart },\r\n           {\r\n               headers: { Authorization: token },\r\n           },\r\n       );\r\n   };\r\n\r\n   const increment = (id) => {\r\n       cart.forEach((item) => {\r\n           if (item._id === id) {\r\n               item.quantity += 1;\r\n           }\r\n       });\r\n       setCart([...cart]);\r\n       addToCart(cart);\r\n   };\r\n\r\n   const decrement = (id) => {\r\n       cart.forEach((item) => {\r\n           if (item._id === id) {\r\n               item.quantity === 1\r\n                   ? (item.quantity = 1)\r\n                   : (item.quantity -= 1);\r\n           }\r\n       });\r\n       setCart([...cart]);\r\n       addToCart(cart);\r\n   };\r\n\r\n   const removeCartItem = (id) => {\r\n       if (window.confirm('Do you want to delete this product!')) {\r\n           cart.forEach((item, index) => {\r\n               if (item._id === id) {\r\n                   cart.splice(index, 1);\r\n               }\r\n           });\r\n           addToCart(cart);\r\n           setCart([...cart]);\r\n       }\r\n   };\r\n\r\n   const tranSuccess = async (payment) => {\r\n       console.log(payment);\r\n\r\n       const { paymentID, address } = payment;\r\n\r\n       await axios.post(\r\n           'api/payment',\r\n           { cart, paymentID, address },\r\n           {\r\n               headers: { Authorization: token },\r\n           },\r\n       );\r\n\r\n       setCart([]);\r\n       addToCart([]);\r\n       alert('You have successfully placed an order');\r\n       setCallback(!callback); // de goi lai api\r\n   };\r\n\r\n   return (\r\n       <div className=\"cart\" style={{marginLeft: '50px', marginBottom: '10rem'}}>\r\n           {cart.length === 0 ? (\r\n               <div className=\"cart-empty\">\r\n                   <h2>Cart Empty</h2>\r\n                   <img\r\n                       className=\"cart-empty-image\"\r\n                       src=\"https://i1.wp.com/www.huratips.com/wp-content/uploads/2019/04/empty-cart.png?fit=603%2C288&ssl=1\"\r\n                       alt=\"cart-empty\"\r\n                   ></img>\r\n               </div>\r\n           ) : (\r\n               <>\r\n                   {/* <div className=\"cart-banner\">\r\n                       <div className=\"cart-container cart-banner-f\">\r\n                           <div>Cart</div>\r\n                           <div className=\"cart-banner-home\">\r\n                               <Link to=\"\">Home</Link>\r\n                               &nbsp;/\r\n                               <span> Cart</span>\r\n                           </div>\r\n                       </div>\r\n                   </div> */}\r\n                   <div className=\"cart-container\">\r\n                       <h3 style ={{paddingLeft: '1rem', color: '#E5707E'}}>Giỏ hàng của bạn</h3>\r\n                       <div className=\"cart-body\">\r\n                           <div className=\"cart-content\">\r\n                               <table className=\"cart-table\">\r\n                                   <thead>\r\n                                       <tr>\r\n                                           <th>&nbsp;</th>\r\n                                           <th>&nbsp;</th>\r\n                                           <th>&nbsp;</th>\r\n                                       </tr>\r\n                                   </thead>\r\n                                   <tbody>\r\n                                       {cart.map((product, index) => {\r\n                                           return (\r\n                                               <tr\r\n                                                   className=\"cart-item\"\r\n                                                   key={index}\r\n                                               >\r\n                                                   <td className=\"cart-thumbnail\">\r\n                                                       <Link\r\n                                                           to={`/detail/${product._id}`}\r\n                                                       >\r\n                                                           <img\r\n                                                               // src={\r\n                                                               //     product\r\n                                                               //         .images\r\n                                                               //         .url\r\n                                                               // }\r\n                                                               src=\"https://bgvnpicture.s3-ap-southeast-1.amazonaws.com/old/stories/images/uno-mattel-4.jpg\"\r\n                                                               alt=\"product-img\"\r\n                                                           ></img>\r\n                                                       </Link>\r\n\r\n                                                   </td>\r\n                                                   <td className=\"cart-quantitys\">\r\n                                                       <div className=\"cart-name\">\r\n                                                           <a\r\n                                                               href={`/detail/${product._id}`}\r\n                                                           >\r\n                                                               {/* {product.name} */}\r\n                                                               bài uno\r\n                                                           </a>\r\n                                                       </div>\r\n                                                       <div class=\"button\">\r\n                                                           <button\r\n                                                               className=\"cart-quantity-ct\"\r\n                                                               onClick={() =>\r\n                                                                   decrement(\r\n                                                                       product._id,\r\n                                                                   )\r\n                                                               }\r\n                                                           >\r\n                                                               -\r\n                                                           </button>\r\n                                                           <span className=\"cart-quantity-number\">\r\n                                                               {product.quantity}\r\n                                                           </span>\r\n                                                           <button\r\n                                                               className=\"cart-quantity-ct\"\r\n                                                               onClick={() =>\r\n                                                                   increment(\r\n                                                                       product._id,\r\n                                                                   )\r\n                                                               }\r\n                                                           >\r\n                                                               +\r\n                                                           </button>\r\n                                                       </div>\r\n                                                   </td>\r\n                                                   <td\r\n                                                       className=\"cart-remove\"\r\n                                                       onClick={() =>\r\n                                                           removeCartItem(\r\n                                                               product._id,\r\n                                                           )\r\n                                                       }\r\n                                                   >\r\n                                                   <div className=\"cart-price-t\">\r\n                                                       $\r\n                                                       {product.price *\r\n                                                           product.quantity}\r\n                                                   </div>\r\n                                                       x\r\n\r\n                                                   </td>\r\n                                               </tr>\r\n                                           );\r\n                                       })}\r\n                                   </tbody>\r\n                               </table>\r\n                           </div>\r\n                           <div className=\"cart-checkout\">\r\n                               <div className=\"cart-address\">\r\n                                   <div style ={{display: 'flex', justifyContent: 'space-between', marginBottom: '0.5rem'}}>\r\n                                       <span style={{fontWeight: '500', fontSize: '0.9rem'}}>Giao tới</span>\r\n                                       <a href=\"#\" style={{color: 'blue', fontSize: '0.9rem'}}>Thay đổi</a>\r\n                                   </div>\r\n                                   <p style ={{fontWeight: '500', fontSize: '1.1rem', marginBottom: '0.5rem'}}>Nguyễn Hữu Hưng | 0905683258</p>\r\n                                   <p>57 Đường số 2 - Cư xá Bình Thới, Phường 8, Quận 11, Thành phố Hồ Chí Minh, Phường 08, Quận 11, Hồ Chí Minh</p>\r\n                               </div>\r\n                               <div className=\"cart-checkout-box\">\r\n                                   <div className=\"cart-subtotal\">\r\n                                       <div className=\"cart-subtotal-label\">\r\n                                           Tổng cộng\r\n                                       </div>\r\n                                       <div className=\"cart-subtotal-number\">\r\n                                           {`${total} đ`}\r\n                                       </div>\r\n                                   </div>\r\n                                   {/* <div className=\"cart-shipping\">\r\n                                       <div className=\"cart-shipping-label\">\r\n                                           Shipping\r\n                                       </div>\r\n                                       <p>\r\n                                           There are no shipping methods\r\n                                           available. Please double check your\r\n                                           address, or contact us if you need\r\n                                           any help.\r\n                                       </p>\r\n                                   </div> */}\r\n                               </div>\r\n                               {/* <Link to=\"#!\" className=\"cart-payment-btn\">\r\n                                   Payment\r\n                               </Link> */}\r\n                               <div style={{marginTop: '2rem'}}>\r\n                                   <PaypalButton\r\n                                       total={total}\r\n                                       tranSuccess={tranSuccess}\r\n                                   ></PaypalButton>\r\n                               </div>\r\n                           </div>\r\n                       </div>\r\n                   </div>\r\n               </>\r\n           )}\r\n           {/* <div className=\"cart-container\">\r\n               <Link to=\"/\" className=\"cart-to-home\">\r\n                   <i\r\n                       className=\"fas fa-long-arrow-alt-left\"\r\n                       style={{ marginRight: '5px' }}\r\n                   ></i>\r\n                   Go Back To Shopping\r\n               </Link>\r\n           </div> */}\r\n           <Link to=\"/\" className=\"icon\">\r\n                       <i className=\"fa fa-arrow-left\"></i>\r\n                   </Link>\r\n       </div>\r\n   );\r\n}\r\n\r\n\r\n","D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\components\\mainpage\\auth\\login\\Login.js",[],"D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\components\\mainpage\\detailsProduct\\DetailsProduct.js",[],"D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\components\\mainpage\\utils\\notFoundPage\\NotFoundPage.js",[],"D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\components\\mainpage\\categories\\Categories.js",[],"D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\components\\mainpage\\history\\OrderHistory.js",[],"D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\components\\mainpage\\history\\DetailHistory.js",[],"D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\components\\mainpage\\createProduct\\CreateProduct.js",["112","113"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { GlobleState } from '../../../GlobleState';\r\nimport DatePicker from 'react-datepicker';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport loadingimage from './loading.gif';\r\n \r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n \r\nfunction CreateProduct() {\r\n    const params = useParams();\r\n \r\n    var initialState = {\r\n        product_id: '',\r\n        name: '',\r\n        japanName: '',\r\n        bust: 0,\r\n        waist: 0,\r\n        hip: 0,\r\n        height: 0,\r\n        blood_type: '',\r\n        birthday: Date(),\r\n        hobby: '',\r\n        price: 0,\r\n        category: '',\r\n        images: {},\r\n    };\r\n    const history = useHistory();\r\n \r\n    const state = useContext(GlobleState);\r\n    const [categories] = state.categoriesApi.categories;\r\n    const [products] = state.productsApi.products;\r\n    const [callback, setCallback] = state.productsApi.callback;\r\n \r\n    const [isAdmin] = state.usersApi.isAdmin;\r\n    const [token] = state.token;\r\n \r\n    const [product, setProduct] = useState(initialState);\r\n    const [images, setImages] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [startdate, setStartDate] = useState(new Date());\r\n    const [onEdit, setOnEdit] = useState(false);\r\n \r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, []);\r\n \r\n    useEffect(() => {\r\n        if (params.id) {\r\n            products.forEach((product) => {\r\n                if (product._id === params.id) {\r\n                    setProduct(product);\r\n                    setImages(product.images);\r\n                    setStartDate(new Date(product.birthday));\r\n                    setOnEdit(true);\r\n                }\r\n            });\r\n        } else {\r\n            setProduct(initialState);\r\n            setImages(false);\r\n            setOnEdit(false);\r\n        }\r\n    }, [params.id, products]);\r\n \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            if (onEdit) {\r\n                if (!isAdmin) return alert(\"You're not an admin.\");\r\n                if (!images) return alert('Image not found.');\r\n                await axios.put(\r\n                    `/api/products/${product._id}`,\r\n                    { ...product, birthday: startdate, images: images },\r\n                    {\r\n                        headers: { Authorization: token },\r\n                    },\r\n                );\r\n                setCallback(!callback);\r\n                history.push('/');\r\n            } else {\r\n                if (!isAdmin) return alert(\"You're not an admin.\");\r\n                if (!images) return alert('Image not found.');\r\n                await axios.post(\r\n                    '/api/products',\r\n                    { ...product, birthday: startdate, images: images },\r\n                    {\r\n                        headers: { Authorization: token },\r\n                    },\r\n                );\r\n                setCallback(!callback);\r\n                history.push('/');\r\n            }\r\n        } catch (err) {\r\n            alert(err.response.data.msg);\r\n        }\r\n    };\r\n    const onHandleChange = (e) => {\r\n        let targets = e.target;\r\n        let name = targets.name;\r\n        let value = targets.value.toLowerCase();\r\n        setProduct({\r\n            ...product,\r\n            [name]: value,\r\n        });\r\n    };\r\n    const onHandleUpload = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            if (!isAdmin) return alert(\"You're not an admin.\");\r\n            const file = e.target.files[0];\r\n \r\n            if (!file) return alert('Image not found.');\r\n \r\n            if (file.size > 1024 * 1024) {\r\n                // 1mb\r\n                return alert('Size too large.');\r\n            }\r\n \r\n            if (file.type !== 'image/jpeg' && file.type !== 'image/png') {\r\n                // 1mb\r\n                return alert('File format is incorrect.');\r\n            }\r\n \r\n            let formDate = new FormData();\r\n            formDate.append('file', file);\r\n \r\n            setLoading(true);\r\n            const res = await axios.post('/api/upload', formDate, {\r\n                headers: {\r\n                    'content-type': 'multipart/from-data',\r\n                    Authorization: token,\r\n                },\r\n            });\r\n            setLoading(false);\r\n            setImages(res.data);\r\n        } catch (err) {\r\n            alert(err.response.data.msg);\r\n        }\r\n    };\r\n    const handleDestroyImage = async () => {\r\n        try {\r\n            if (!isAdmin) return alert(\"You're not an admin.\");\r\n            setLoading(true);\r\n            await axios.post(\r\n                '/api/destroy',\r\n                { public_id: images.public_id },\r\n                {\r\n                    headers: { Authorization: token },\r\n                },\r\n            );\r\n            setLoading(false);\r\n            setImages(false);\r\n        } catch (err) {\r\n            alert(err.response.data.msg);\r\n        }\r\n    };\r\n \r\n    let styleImaheUpload = {\r\n        display: images ? 'block' : 'none',\r\n    };\r\n \r\n    return (\r\n        <div className=\"create-product container\" id = \"create-product-container\">\r\n            <div className=\"cp-image-upload-box\">\r\n                {loading ? (\r\n                    <div className=\"cp-loading-image\">\r\n                        {' '}\r\n                        <img src={loadingimage} alt=\"loading-img\"></img>\r\n                    </div>\r\n                ) : (\r\n                    <>\r\n                        <input\r\n                            type=\"file\"\r\n                            className=\"cp-file-upload\"\r\n                            name=\"file\"\r\n                            id=\"file_up\"\r\n                            onChange={onHandleUpload}\r\n                        ></input>\r\n                        <img\r\n                            className=\"cp-image-upload\"\r\n                            style={styleImaheUpload}\r\n                            alt=\"img-upload\"\r\n                            src={images ? images.url : ''}\r\n                        ></img>\r\n                        {images ? (\r\n                            <Tooltip title=\"Delete Image\" placement=\"top\">\r\n                                <span\r\n                                    className=\"cp-image-button\"\r\n                                    onClick={handleDestroyImage}\r\n                                >\r\n                                    X\r\n                                </span>\r\n                            </Tooltip>\r\n                        ) : (\r\n                            ''\r\n                        )}\r\n                    </>\r\n                )}\r\n            </div>\r\n           \r\n            <div className =\"div-form\">\r\n                <form onSubmit={handleSubmit} className = \"form-create-edit\">\r\n                   \r\n                    {/* <div className=\"mb-3\">\r\n                        <label htmlFor=\"product_id\" className=\"form-label\">\r\n                            Product ID\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            onChange={onHandleChange}\r\n                            disabled={onEdit ? true : false}\r\n                            value={product.product_id}\r\n                            id=\"product_id\"\r\n                            name=\"product_id\"\r\n                            required\r\n                        />\r\n                    </div> */}\r\n \r\n                    <div className=\"ten-cate\">\r\n                        <div className=\"mb-3\" id =\"ten\">\r\n                            <label htmlFor=\"name\" className=\"form-label\">\r\n                                Tên\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                onChange={onHandleChange}\r\n                                value={product.name}\r\n                                id=\"name\"\r\n                                name=\"name\"\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label\r\n                                htmlFor=\"category\"\r\n                                className=\"form-label\"\r\n                                style={{ marginRight: '20px' }}\r\n                            >\r\n                                Phân loại\r\n                            </label>\r\n                            <select\r\n                                name=\"category\"\r\n                                id=\"category\"\r\n                                value={product.category}\r\n                                onChange={onHandleChange}\r\n                                required\r\n                            >\r\n                                <option value=\"\">Please select a category</option>\r\n                                {categories.map((category) => {\r\n                                    return (\r\n                                        <option\r\n                                            value={category.category}\r\n                                            key={category._id}\r\n                                        >\r\n                                            {category.name}\r\n                                        </option>\r\n                                    );\r\n                                })}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                   \r\n                    <div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"price\" className=\"form-label\">\r\n                                Giá tiền\r\n                            </label>\r\n                            <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                onChange={onHandleChange}\r\n                                value={product.price}\r\n                                id=\"price\"\r\n                                name=\"price\"\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div>đồng</div>\r\n                    </div>\r\n                   \r\n                    <div className=\"motcaidivtodung\">\r\n                        <div className=\"mb-3 mr-3\">\r\n                            <label htmlFor=\"bust\" className=\"form-label\">\r\n                                Số người chơi tối thiểu\r\n                            </label>\r\n                            <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                onChange={onHandleChange}\r\n                                value={product.bust}\r\n                                id=\"bust\"\r\n                                name=\"bust\"\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-3 mr-3\">\r\n                            <label htmlFor=\"waist\" className=\"form-label\">\r\n                                tối đa\r\n                            </label>\r\n                            <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                onChange={onHandleChange}\r\n                                value={product.waist}\r\n                                id=\"waist\"\r\n                                name=\"waist\"\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"japanName\" className=\"form-label\">\r\n                                Thời gian chơi\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                onChange={onHandleChange}\r\n                                value={product.japanName}\r\n                                id=\"japanName\"\r\n                                name=\"japanName\"\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div>phút</div>\r\n                    </div>\r\n \r\n                    <div className=\"motcaidivvuavua\">\r\n                        <div className=\"mb-3 mr-3\">\r\n                            <label htmlFor=\"hip\" className=\"form-label\">\r\n                                Độ tuổi từ\r\n                            </label>\r\n                            <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                onChange={onHandleChange}\r\n                                value={product.hip}\r\n                                id=\"hip\"\r\n                                name=\"hip\"\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-3 mr-3\">\r\n                            <label htmlFor=\"height\" className=\"form-label\">\r\n                                Độ khó\r\n                            </label>\r\n                            <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                onChange={onHandleChange}\r\n                                value={product.height}\r\n                                id=\"height\"\r\n                                name=\"height\"\r\n                                required\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                   \r\n                   \r\n                    {/* <div className=\"birth\">\r\n                        <span className=\"d-block\">Birthday</span>\r\n                        <DatePicker\r\n                            selected={startdate}\r\n                            onChange={(date) => setStartDate(date)}\r\n                            dateFormat=\"dd/MM/yyyy\"\r\n                        />\r\n                    </div> */}\r\n                   \r\n                    {/* <div className=\"mb-3 mt-3\">\r\n                        <label htmlFor=\"blood_type\" className=\"form-label\">\r\n                            Blood Type\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            onChange={onHandleChange}\r\n                            value={product.blood_type}\r\n                            id=\"blood_type\"\r\n                            name=\"blood_type\"\r\n                            required\r\n                        />\r\n                    </div> */}\r\n \r\n                    <div className=\"mb-3 mt-3\">\r\n                        <label htmlFor=\"hobby\" className=\"form-label\">\r\n                            Mô tả\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            onChange={onHandleChange}\r\n                            value={product.hobby}\r\n                            id=\"hobby\"\r\n                            name=\"hobby\"\r\n                            required\r\n                        />\r\n                    </div>\r\n                   \r\n                   \r\n                    <button type=\"submit\" className=\"cp-button\">\r\n                        {onEdit ? 'Cập nhật' : 'Tạo'}\r\n                    </button>\r\n                </form>\r\n            </div>\r\n           \r\n        </div>\r\n    );\r\n}\r\n \r\nexport default CreateProduct;\r\n \r\n\r\n\r\n","D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\components\\mainpage\\myAccount\\MyAccount.js",["114"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nimport axios from 'axios';\r\n\r\n// MUI stuff\r\nimport TextField from '@material-ui/core/TextField/TextField';\r\nimport Button from '@material-ui/core/Button/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nfunction MyAccount() {\r\n    const [user, setUser] = useState({\r\n        email: '',\r\n        password: '',\r\n        loading: false,\r\n    });\r\n    const [errors, setErrors] = useState({});\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, []);\r\n\r\n    const onHandleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setUser({\r\n            ...user,\r\n            [name]: value,\r\n        });\r\n    };\r\n    const [date, setDate] = useState(\r\n        moment(new Date()).format(\"YYYY-MM-DD\")\r\n    );\r\n\r\n     // handles when user changes input in date inputfield\r\n    const handleChangeDate = e => {\r\n        setDate(e.target.value);\r\n    };\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setUser({ ...user, loading: true });\r\n\r\n        try {\r\n            await axios.post('/user/login', { ...user });\r\n\r\n            localStorage.setItem('firstLogin', true);\r\n            setUser({ ...user, loading: false });\r\n\r\n            window.location.href = '/';\r\n        } catch (err) {\r\n            setUser({ ...user, loading: false });\r\n            if (user.email === '') {\r\n                setErrors({ msg: 'Email not empty' });\r\n            } else {\r\n                if (user.password === '') {\r\n                    setErrors({ msg: 'Password not empty' });\r\n                } else {\r\n                    setErrors(err.response.data);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"wapper\">\r\n            <div className=\"titile__\" > \r\n                <div className=\"tittle-content\">\r\n                    <Link to=\"/\" style= {{color: '#7b7b7b'}}>\r\n                        Home \r\n                    </Link>\r\n                    <span> / </span>\r\n                    <span>MyAccount</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"wapper-body\">\r\n                <br/>\r\n                <br/>\r\n                <div className =\"information\">\r\n                    <div className=\"information-left\">\r\n                        <h3>Chỉnh sửa thông tin</h3>\r\n                        <form \r\n                            noValidate\r\n                            autoComplete=\"off\"\r\n                            \r\n                            className=\"form-infor\"\r\n                        >\r\n                            \r\n                            <div className=\"form-title\">\r\n                                <label>Họ và tên</label>\r\n                                <TextField\r\n                                    autoComplete=\"\"\r\n                                    label=\"Last Name\"\r\n                                    variant=\"outlined\"\r\n                                    value= {user.password}\r\n                                    onChange={onHandleChange}\r\n                                    name=\"email\"\r\n                                    className=\"form-input\"\r\n                                    required={true}\r\n                                    helperText=\"\"\r\n                                    error=\"\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-title\">\r\n                                <label>Số điện thoại</label>\r\n                                <TextField\r\n                                    autoComplete=\"\"\r\n                                    label=\"Phone\"\r\n                                    variant=\"outlined\"\r\n                                    value= {user.password}\r\n                                    onChange={onHandleChange}\r\n                                    name=\"email\"\r\n                                    className=\"form-input\"\r\n                                    required={true}\r\n                                    helperText=\"\"\r\n                                    error=\"\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-title\">\r\n                                <label>Email</label>\r\n                                <TextField\r\n                                    autoComplete=\"\"\r\n                                    label=\"Email\"\r\n                                    variant=\"outlined\"\r\n                                    value= {user.password}\r\n                                    onChange={onHandleChange}\r\n                                    name=\"email\"\r\n                                    className=\"form-input\"\r\n                                    required={true}\r\n                                    helperText=\"\"\r\n                                    error=\"\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-title\">\r\n                                <label>Địa chỉ</label>\r\n                                <TextField\r\n                                    autoComplete=\"\"\r\n                                    label=\"Password\"\r\n                                    variant=\"outlined\"\r\n                                    required={true}\r\n                                    value={user.password}\r\n                                    onChange={onHandleChange}\r\n                                    name=\"password\"\r\n                                    type=\"password\"\r\n                                    className=\"form-input\"\r\n                                    helperText=\"\"\r\n                                    error=\"\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-title\">\r\n                                <label>Ngày sinh</label>\r\n                                <TextField\r\n                                    name=\"date\"\r\n                                    id=\"date\"\r\n                                    label=\"Date\"\r\n                                    variant=\"outlined\"\r\n                                    type=\"date\"\r\n                                    InputLabelProps={{ shrink: true }}\r\n                                    value={date}\r\n                                    onChange={handleChangeDate}\r\n                                    fullWidth\r\n                                    required\r\n                                    className=\"form-input\"\r\n                                  />\r\n                            </div>\r\n                            <div className=\"login-group\" style={{marginLeft:'15%'}}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    type=\"submit\"\r\n                                    onSubmit={onSubmit}\r\n                                    disabled={user.loading}\r\n                                    className=\"update-infor-button\"\r\n                                >\r\n                                    {user.loading ? (\r\n                                        <CircularProgress size={25} />\r\n                                    ) : (\r\n                                        'Cập nhập thông tin'\r\n                                    )}\r\n                                </Button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"information-right\">\r\n                        <h3>Ảnh đại diện</h3>\r\n                        <img src=\"https://res.cloudinary.com/dxnfxl89q/image/upload/v1609941293/javcommerce/person_slkixq.jpg\" alt=\"\" className=\"information-left-image\"/>\r\n                        <Button variant=\"contained\"  type=\"submit\" className=\"update-avatar\">Cập nhập Avatar</Button>\r\n                        <form \r\n                            noValidate\r\n                            autoComplete=\"off\"\r\n                            \r\n                            className=\"form-infor\"\r\n                        >\r\n                            \r\n                            <div className=\"form-title\">\r\n                                <label>Mật khẩu cũ</label>\r\n                                <TextField\r\n                                    autoComplete=\"\"\r\n                                    label=\"Mật khẩu cũ\"\r\n                                    variant=\"outlined\"\r\n                                    value= {user.password}\r\n                                    onChange={onHandleChange}\r\n                                    name=\"email\"\r\n                                    className=\"form-input\"\r\n                                    required={true}\r\n                                    helperText=\"\"\r\n                                    error=\"\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-title\">\r\n                                <label>Mật khẩu mới</label>\r\n                                <TextField\r\n                                    autoComplete=\"\"\r\n                                    label=\"Mật khẩu mới\"\r\n                                    variant=\"outlined\"\r\n                                    value= {user.password}\r\n                                    onChange={onHandleChange}\r\n                                    name=\"email\"\r\n                                    className=\"form-input\"\r\n                                    required={true}\r\n                                    helperText=\"\"\r\n                                    error=\"\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-title\">\r\n                                <label>Xác nhận mật khẩu</label>\r\n                                <TextField\r\n                                    autoComplete=\"\"\r\n                                    label=\"Mật khẩu mới\"\r\n                                    variant=\"outlined\"\r\n                                    value= {user.password}\r\n                                    onChange={onHandleChange}\r\n                                    name=\"email\"\r\n                                    className=\"form-input\"\r\n                                    required={true}\r\n                                    helperText=\"\"\r\n                                    error=\"\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"login-group\" style={{marginLeft:'15%'}}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    \r\n                                    type=\"submit\"\r\n                                    onSubmit={onSubmit}\r\n                                    disabled={user.loading}\r\n                                    className=\"update-password-button\"\r\n                                >\r\n                                    {user.loading ? (\r\n                                        <CircularProgress size={25} />\r\n                                    ) : (\r\n                                        'Cập nhập mật khẩu'\r\n                                    )}\r\n                                </Button>\r\n                            </div>\r\n                        </form>               \r\n                    </div>\r\n                </div>\r\n                <br/>\r\n                <br/>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyAccount;\r\n","D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\api\\ProductsApi.js",["115","116"],"import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction ProductsApi() {\n    const [products, setProducts] = useState({});\n    const [callback, setCallback] = useState(false);\n    const [loadingAPI, setLoadingAPI] = useState(false);\n    const [category, setCategory] = useState('');\n    const [page, setPage] = useState(1);\n    const [sort, setSort] = useState('');\n    const [query, setQuery] = useState('');\n    const [result, setResult] = useState(0);\n    useEffect(() => {\n        const getProducts = async () => {\n            setLoadingAPI(true);\n            const res = await axios.get(\n                `/api/products?limit=${page * 9}&${sort}&${category}&name[regex]=${query}`,\n            );\n            setLoadingAPI(false);\n            setProducts(res.data.products);\n            setResult(res.data.results);\n        };\n        getProducts();\n    }, [callback, category, sort, query]);\n\n    useEffect(() => {\n        const getProducts = async () => {\n            const res = await axios.get(\n                `/api/products?limit=${page * 9}&${sort}&${category}&name[regex]=${query}`,\n            );\n            setProducts(res.data.products);\n            setResult(res.data.results);\n        };\n        getProducts();\n    }, [page]);\n\n    return {\n        products: [products, setProducts],\n        callback: [callback, setCallback],\n        category: [category, setCategory],\n        page: [page, setPage],\n        sort: [sort, setSort],\n        query: [query, setQuery],\n        result: [result, setResult],\n        loadingAPI: [loadingAPI, setLoadingAPI],\n    };\n}\n\nexport default ProductsApi;\n","D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\components\\mainpage\\products\\Products.js",[],"D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\api\\CategoriesApi.js",[],"D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\api\\UsersApi.js",[],"D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\components\\mainpage\\auth\\register\\Register.js",[],"D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\components\\mainpage\\cartHover\\CartHover.js",[],"D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\components\\mainpage\\cart\\PaypalButton.js",[],"D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\components\\mainpage\\utils\\productItem\\ProductItem.js",["117"],"D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\components\\mainpage\\filter\\Filter.js",[],"D:\\Hung\\Thương mại điện tử\\vajgate-ecomerce\\client\\src\\components\\mainpage\\loadMore\\LoadMore.js",[],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":161,"column":28,"nodeType":"124","endLine":161,"endColumn":68},{"ruleId":"122","severity":1,"message":"123","line":205,"column":28,"nodeType":"124","endLine":205,"endColumn":68},{"ruleId":"125","severity":1,"message":"126","line":213,"column":40,"nodeType":"124","endLine":213,"endColumn":96},{"ruleId":"127","severity":1,"message":"128","line":3,"column":8,"nodeType":"129","messageId":"130","endLine":3,"endColumn":18},{"ruleId":"131","severity":1,"message":"132","line":64,"column":8,"nodeType":"133","endLine":64,"endColumn":29,"suggestions":"134"},{"ruleId":"127","severity":1,"message":"135","line":18,"column":12,"nodeType":"129","messageId":"130","endLine":18,"endColumn":18},{"ruleId":"131","severity":1,"message":"136","line":24,"column":8,"nodeType":"133","endLine":24,"endColumn":41,"suggestions":"137"},{"ruleId":"131","severity":1,"message":"138","line":35,"column":8,"nodeType":"133","endLine":35,"endColumn":14,"suggestions":"139"},{"ruleId":"127","severity":1,"message":"140","line":14,"column":9,"nodeType":"129","messageId":"130","endLine":14,"endColumn":12},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'DatePicker' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initialState'. Either include it or remove the dependency array.","ArrayExpression",["143"],"'errors' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'page'. Either include it or remove the dependency array.",["144"],"React Hook useEffect has missing dependencies: 'category', 'query', and 'sort'. Either include them or remove the dependency array.",["145"],"'day' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},"Update the dependencies array to be: [initialState, params.id, products]",{"range":"152","text":"153"},"Update the dependencies array to be: [callback, category, sort, query, page]",{"range":"154","text":"155"},"Update the dependencies array to be: [category, page, query, sort]",{"range":"156","text":"157"},[1975,1996],"[initialState, params.id, products]",[885,918],"[callback, category, sort, query, page]",[1260,1266],"[category, page, query, sort]"]